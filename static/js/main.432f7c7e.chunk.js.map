{"version":3,"sources":["utils/data.js","utils/webgl.js","assets/jessica-pamp-sGRMspZmfPE-unsplash.jpg","ZCanvas.js","PresetModal.js","Cmirror.js","VaribleModal.js","App.js","index.js"],"names":["preset","vex","frag","name","createShader","gl","source","type","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","Error","getShaderInfoLog","simpleBindBuffer","shaderProgram","data","size","offset","stride","indices","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","index","getAttribLocation","vertexAttribPointer","FLOAT","indexesBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","enableVertexAttribArray","draw","vertexSource","fragmentSource","image","clearColor","clear","COLOR_BUFFER_BIT","vsource","fsource","vertShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","getProgram","useProgram","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","uniform1i","getUniformLocation","drawArrays","TRIANGLE_STRIP","ZCanvas","props","ref","canvasRef","useRef","useState","setImage","loadImage","useCallback","src","console","log","img","Image","imgph","onload","current","width","height","getContext","viewport","canvas","load","val","useImperativeHandle","useEffect","onError","e","style","objectFit","forwardRef","PresetModal","visible","setVisible","closeHandler","event","icon","auto","onClick","open","onClose","Title","Content","map","item","onPreset","Action","passive","close","Cmirror","display","flexDirection","h5","title","value","onBeforeChange","editor","onChange","options","tabSize","mode","theme","matchBrackets","lineNumbers","VaribleModal","attribute","description","Column","prop","label","Options","className","placeholder","obj","background","onLoadImage","Option","input","document","createElement","accept","onchange","files","reader","FileReader","target","result","readAsDataURL","click","App","setVertexSource","setFragmentSource","error","setError","form","setForm","h4","margin","marginRight","gap","marginBottom","textAlign","marginTop","code","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.432f7c7e.chunk.js","sourcesContent":["export const preset = [\n  {\n    vex:\n      \"attribute vec3 aPosition;\\nattribute vec2 aTexCoord;\\nvarying lowp vec2 vTexCoord;\\nvoid main(){\\n    vTexCoord = aTexCoord;\\n    gl_Position=vec4(aPosition,1.0);\\n}\",\n    frag:\n      \"varying lowp vec2 vTexCoord;\\nuniform sampler2D uSampler;\\nvoid main(){\\n    gl_FragColor = texture2D(uSampler,vTexCoord);\\n}\",\n    name: \"图片 - 基础\",\n  },\n];\n","/**\n * 编译着色器\n *\n * @param {WebGLRenderingContext} gl - gl上下文\n * @param {string} source - 着色器源码\n * @param {*} type - 类型，gl.VERTEX_SHADER 或 gl.FRAGMENT_SHADER\n * @returns\n */\nfunction createShader(gl, source, type) {\n  let shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    //console.log(type, \"complie failed.\");\n    throw new Error(`ShaderInfoLog: ${gl.getShaderInfoLog(shader)}`);\n  }\n  //console.log(`ShaderInfoLog: ${gl.getShaderInfoLog(shader)}`);\n  return shader;\n}\n\n/**\n * 编译并连接着色器\n *\n * @export\n * @param {WebGLRenderingContext} gl - gl上下文\n * @param {string} vsource - 顶点着色器源码\n * @param {string} fsource - 片段着色器源码\n * @returns {WebGLProgram|null} - 连接好的WebGLProgram，失败则返回null\n */\nexport function getProgram(gl, vsource, fsource) {\n  let vertShader = createShader(gl, vsource, gl.VERTEX_SHADER);\n  let fragShader = createShader(gl, fsource, gl.FRAGMENT_SHADER);\n  let shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertShader);\n  gl.attachShader(shaderProgram, fragShader);\n  gl.linkProgram(shaderProgram);\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    //console.log(\"link program error:\", gl.getProgramInfoLog(shaderProgram));\n    throw new Error(`ProgramInfoLog: ${gl.getProgramInfoLog(shaderProgram)}`);\n  }\n  //console.log(`ProgramInfoLog: ${gl.getProgramInfoLog(shaderProgram)}`);\n  return shaderProgram;\n}\n\n/**\n * 简单缓冲绑定\n *\n * @param {*} gl - gl上下文\n * @param {*} shaderProgram - shaderProgram\n * @param {*} name - 着色器里的属性名称\n * @param {*} data - 数据源\n * @param {*} size - 一组数据长度\n * @param {*} offset - 偏移\n * @param {*} stride - 步长\n * @param {*} indices - 索引（如果有）\n * @returns buffer\n */\nexport function simpleBindBuffer(\n  gl,\n  shaderProgram,\n  name,\n  data,\n  size,\n  offset,\n  stride,\n  indices = null\n) {\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\n  const index = gl.getAttribLocation(shaderProgram, name);\n  gl.vertexAttribPointer(index, size, gl.FLOAT, false, offset, stride);\n\n  if (indices != null) {\n    const indexesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexesBuffer);\n    gl.bufferData(\n      gl.ELEMENT_ARRAY_BUFFER,\n      new Uint16Array(indices),\n      gl.STATIC_DRAW\n    );\n  }\n\n  gl.enableVertexAttribArray(index);\n  return buffer;\n}\n\n/**\n *\n *\n * @param {*} gl - gl上下文\n * @param {*} shaderProgram - shaderProgram\n * @param {*} image - 图片元素\n * @returns\n */\nexport function bindTexture(gl, shaderProgram, image) {\n  let texture = gl.createTexture();\n  //绑定纹理\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  //指定二维纹理贴图，详细级别。颜色组件，数据格式，数据类型，数据源\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  //设置纹理在放大和缩小时候采用的采样方案。\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(\n    gl.TEXTURE_2D,\n    gl.TEXTURE_MIN_FILTER,\n    gl.LINEAR_MIPMAP_NEAREST\n  );\n  //生成mipmap webgl 1.0 只能给图片边长为2的幂的图片生成 mipmap\n  gl.generateMipmap(gl.TEXTURE_2D);\n  //结束设置\n  //gl.activeTexture(gl.TEXTURE0);\n  gl.uniform1i(gl.getUniformLocation(shaderProgram, \"uSampler\"), 0);\n}\n\nexport function draw(gl, vertexSource, fragmentSource, image) {\n  //正方形\n  const vertices = [-1, -1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0];\n  //纹理对应坐标\n  const tex = [0, 1, 0, 0, 1, 1, 1, 0];\n  gl.clearColor(0, 0, 0, 1);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n  //创建着色器\n  const shaderProgram = getProgram(gl, vertexSource, fragmentSource);\n  //设置缓冲\n  simpleBindBuffer(gl, shaderProgram, \"aPosition\", vertices, 3, 0, 0);\n  simpleBindBuffer(gl, shaderProgram, \"aTexCoord\", tex, 2, 0, 0);\n  //未来添加其他可以绑定的参数也在这里：\n  //\n  gl.useProgram(shaderProgram);\n  bindTexture(gl, shaderProgram, image);\n  //加载完纹理后再画图\n  gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\n","export default __webpack_public_path__ + \"static/media/jessica-pamp-sGRMspZmfPE-unsplash.5cffdaca.jpg\";","import React, {\n  useCallback,\n  useRef,\n  useEffect,\n  useImperativeHandle,\n  forwardRef,\n  useState,\n} from \"react\";\nimport { draw } from \"./utils/webgl.js\";\nimport imgph from \"./assets/jessica-pamp-sGRMspZmfPE-unsplash.jpg\";\n\nfunction ZCanvas(props, ref) {\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n\n  const loadImage = useCallback(\n    (src) => {\n      console.log(\"Load Image\");\n      let img = new Image();\n      img.src = src || imgph;\n      img.onload = () => {\n        console.log(\"Image loaded\");\n        canvasRef.current.width = img.width;\n        canvasRef.current.height = img.height;\n        const gl = canvasRef.current.getContext(\"webgl2\");\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        setImage(img);\n      };\n    },\n    [canvasRef]\n  );\n\n  const load = (val) => {\n    switch (val) {\n      case \"0\":\n        break;\n      case \"1\":\n        loadImage(imgph);\n        break;\n      case \"2\":\n        break;\n      default:\n        loadImage(val);\n        break;\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    load,\n  }));\n\n  //当shader变化的时候，重新编译＆绘图\n  useEffect(() => {\n    try {\n      const gl = canvasRef.current.getContext(\"webgl2\");\n      image && draw(gl, props.vertexSource, props.fragmentSource, image);\n      props.onError(null);\n    } catch (e) {\n      props.onError(e);\n    }\n  }, [props.vertexSource, props.fragmentSource, image, props]);\n\n  //初始化，加载图片\n  useEffect(() => {\n    loadImage(props.src);\n  }, [loadImage, props.src]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{ height: \"50vh\", width: \"100%\", objectFit: \"contain\" }}\n    ></canvas>\n  );\n}\n\nexport default forwardRef(ZCanvas);\n","import { React, useState } from \"react\";\nimport { Folder } from \"@geist-ui/react-icons\";\nimport { Button, Modal } from \"@geist-ui/react\";\nimport { preset } from \"./utils/data.js\";\n\nfunction PresetModal(props) {\n  const [visible, setVisible] = useState(false);\n  const closeHandler = (event) => {\n    setVisible(false);\n  };\n  return (\n    <>\n      <Button\n        icon={<Folder />}\n        auto\n        type=\"abort\"\n        onClick={() => setVisible(true)}\n      >\n        加载预设\n      </Button>\n      <Modal open={visible} onClose={closeHandler}>\n        <Modal.Title>选择预设</Modal.Title>\n        <Modal.Content>\n          {preset.map((item, index) => {\n            return (\n              <Button\n                onClick={() => {\n                  props.onPreset(item);\n                  closeHandler();\n                }}\n                key={index}\n              >\n                {item.name}\n              </Button>\n            );\n          })}\n        </Modal.Content>\n        <Modal.Action passive onClick={({ close }) => close()}>\n          关闭\n        </Modal.Action>\n      </Modal>\n    </>\n  );\n}\n\nexport default PresetModal;\n","import React from \"react\";\nimport { Col, Text } from \"@geist-ui/react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/clike/clike.js\";\nimport \"codemirror/theme/dracula.css\";\n\nexport default function Cmirror(props) {\n  const options = {\n    tabSize: 4,\n    mode: \"x-shader/x-vertex\",\n    theme: \"dracula\",\n    matchBrackets: true,\n    lineNumbers: true,\n  };\n  return (\n    <Col\n      style={{\n        height: \"calc( 50vh - (var(--nav-height) / 2) - 10px)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Text h5>{props.title}</Text>\n      <CodeMirror\n        value={props.value}\n        onBeforeChange={(editor, data, value) => {\n          props.onChange(value);\n        }}\n        options={options}\n        style={{height:\"100%\"}}\n      ></CodeMirror>\n    </Col>\n  );\n}\n","//显示支持的变量\nimport { React, useState } from \"react\";\nimport { Button, Modal, Table,Code } from \"@geist-ui/react\";\nimport { Lambda } from \"@geist-ui/react-icons\";\n\nfunction VaribleModal(props) {\n  const [visible, setVisible] = useState(false);\n  const closeHandler = (event) => {\n    setVisible(false);\n  };\n  const data = [\n    {\n      attribute: <Code>attribute</Code>,\n      type: \"vec3\",\n      name: \"aPosition\",\n      description: \"输入坐标\",\n    },\n    {\n      attribute: <Code>attribute</Code>,\n      type: \"vec2\",\n      name: \"aTexCoord\",\n      description: \"顶点的纹理坐标\",\n    },\n    {\n      attribute: <Code>uniform</Code>,\n      type: \"sampler2D\",\n      name: \"uSampler\",\n      description: \"纹理数据\",\n    },\n  ];\n  return (\n    <>\n      <Button\n        icon={<Lambda />}\n        auto\n        type=\"abort\"\n        onClick={() => setVisible(true)}\n      >\n        变量支持\n      </Button>\n      <Modal open={visible} onClose={closeHandler} width=\"35rem\">\n        <Modal.Content>\n          <Table data={data}>\n            <Table.Column prop=\"attribute\" label=\"属性\" />\n            <Table.Column prop=\"type\" label=\"类型\" />\n            <Table.Column prop=\"name\" label=\"名称\" />\n            <Table.Column prop=\"description\" label=\"描述\" />\n          </Table>\n        </Modal.Content>\n        <Modal.Action passive onClick={({ close }) => close()}>\n          关闭\n        </Modal.Action>\n      </Modal>\n    </>\n  );\n}\n\nexport default VaribleModal;\n","import \"./App.css\";\nimport React, { useRef, useState } from \"react\";\nimport {\n  Col,\n  Row,\n  Button,\n  Text,\n  Select,\n  Divider,\n  Badge,\n  Note,\n} from \"@geist-ui/react\";\nimport { Upload, Github } from \"@geist-ui/react-icons\";\nimport { preset } from \"./utils/data.js\";\nimport ZCanvas from \"./ZCanvas\";\nimport PresetModal from \"./PresetModal\";\nimport Cmirror from \"./Cmirror\";\nimport VaribleModal from \"./VaribleModal\";\n\nfunction Options(props) {\n  const bgHandle = (val) => {\n    let obj = { ...props.value, background: val };\n    props.onLoadImage(val);\n    props.onChange(obj);\n  };\n  const uploadImage = () => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \"image/*\";\n    input.onchange = () => {\n      if (input.files[0]) {\n        var reader = new FileReader();\n        reader.onload = (event) => {\n          props.onLoadImage(event.target.result);\n        };\n        reader.readAsDataURL(input.files[0]);\n      }\n    };\n    input.click();\n  };\n\n  return (\n    <form className=\"control\">\n      <Row>\n        <label>背景</label>\n        <Select\n          placeholder=\"选择背景\"\n          onChange={bgHandle}\n          value={props.value.background}\n        >\n          <Select.Option value=\"1\">图片一</Select.Option>\n          <Select.Option value=\"2\">自定义图片</Select.Option>\n        </Select>\n        {props.value.background === \"2\" && (\n          <Button\n            size=\"small\"\n            icon={<Upload />}\n            type=\"secondary\"\n            onClick={uploadImage}\n            auto\n          >\n            上传图片\n          </Button>\n        )}\n      </Row>\n    </form>\n  );\n}\n\nfunction App() {\n  const [vertexSource, setVertexSource] = useState(preset[0].vex);\n  const [fragmentSource, setFragmentSource] = useState(preset[0].frag);\n  const [error, setError] = useState(null);\n  const [form, setForm] = useState({ background: \"1\" });\n  const canvasRef = useRef();\n\n  const onPreset = (preset) => {\n    console.log(`Load preset ${preset.name}`);\n    setVertexSource(preset.vex);\n    setFragmentSource(preset.frag);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"nav\">\n        <div className=\"nav-left\">\n          <Text h4 style={{ margin: \"0\", display: \"inline-block\",marginRight:\"10px\" }}>\n            Z ShaderViewer\n          </Text>\n          <Badge size=\"small\">Beta</Badge>\n        </div>\n        <div className=\"nav-right\">\n          <VaribleModal />\n          <PresetModal onPreset={onPreset} />\n          <Button icon={<Github />} auto type=\"abort\">\n            Github\n          </Button>\n        </div>\n      </div>\n      <Row gap={0.8} style={{ marginBottom: \"15px\" }}>\n        <Col>\n          <div style={{ textAlign: \"center\" }}>\n            <ZCanvas\n              ref={canvasRef}\n              src={null}\n              vertexSource={vertexSource}\n              fragmentSource={fragmentSource}\n              onError={(e) => setError(e)}\n            ></ZCanvas>\n          </div>\n          <Divider />\n          <Options\n            value={form}\n            onChange={(obj) => {\n              setForm(obj);\n            }}\n            onLoadImage={(val) => {\n              canvasRef.current.load(val);\n            }}\n          ></Options>\n          {error && (\n            <Note\n              type=\"error\"\n              label=\"error\"\n              className=\"control\"\n              style={{ marginTop: \"10px\" }}\n            >\n              {error}\n            </Note>\n          )}\n        </Col>\n        <Col style={{ height: \"100%\" }}>\n          <Cmirror\n            title=\"顶点着色器\"\n            value={vertexSource}\n            onChange={(code) => {\n              setVertexSource(code);\n            }}\n          ></Cmirror>\n          <Cmirror\n            title=\"片段着色器\"\n            value={fragmentSource}\n            onChange={(code) => setFragmentSource(code)}\n          ></Cmirror>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { GeistProvider, CssBaseline } from \"@geist-ui/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GeistProvider>\n      <CssBaseline />\n      <App />\n    </GeistProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}